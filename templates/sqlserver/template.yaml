# template.yaml

apiVersion: scaffolder.backstage.io/v1beta3
kind: Template
metadata:
  name: sqlserver
  title: Deploy New SQL Server Instance
  description: Provision a new Microsoft SQL Server instance via AWX.
  tags:
    - infrastructure
    - sql
    - database
spec:
  owner: user:guest # Replace with the actual owner (e.g., group:platform-team)
  type: database # A custom type for your Catalog entity

  # === 1. PARAMETERS: Defines the form that the user sees ===
  parameters:
    - title: Instance Details
      description: Provide the configuration for your new SQL Server.
      required:
        - instanceName
        - environment
        - edition
      properties:
        instanceName:
          title: Instance Name
          type: string
          description: A unique name for your new SQL Server (e.g., SQLQO5DD01).
          ui:autofocus: true
          # You can add a regex pattern for validation:
          # pattern: '^[a-z0-9]([-a-z0-9]*[a-z0-9])?$'

        environment:
          title: Environment
          type: string
          description: Which environment is this database for?
          # Use enum to create a dropdown list
          enum:
            - dev
            - it
            - qa
            - prod
          default: dev

        edition:
          title: Database Edition
          type: string
          description: Select the required database edition.
          # Use enum with ui:widget: select for a clean dropdown
          enum:
            - standard
            - enterprise
            - developer
          enumNames:
            - 'Developer (Free for development/testing)'
            - 'Standard (500€/month)'
            - 'Enterprise (1000€/month)'

    - title: Owner and Catalog
      description: Who will own this new resource in Backstage?
      required:
        - owner
      properties:
        owner:
          title: Owner
          type: string
          description: Select the team or user who will own this resource.
          # The OwnerPicker is a built-in custom field to select a Catalog entity
          ui:field: OwnerPicker
          ui:options:
            allowedKinds:
              - Group
              - User

  # === 2. STEPS: Defines the backend actions to be executed ===
  steps:
    # STEP 1: Placeholder for fetching a base structure if needed (e.g., catalog-info.yaml)
    - id: fetch-skeleton
      name: Fetching Template Files
      action: fetch:template
      input:
        url: ./skeleton # Assumes you have a 'skeleton' folder next to template.yaml
        values:
          instanceName: ${{ parameters.instanceName }}
          owner: ${{ parameters.owner }}
          # ... and any other variables you need in your template files

    # STEP 2: The critical step to trigger AWX
    - id: trigger-awx-deployment
      name: Trigger AWX Deployment
      # NOTE: This is a placeholder for a custom AWX action.
      # You will need to install/create a custom action that calls your AWX API.
      action: awx:job:launch 
      input:
        jobTemplateName: 'SQL_Server_Provisioning'
        # Pass the form data as 'extra_vars' to your AWX Job Template
        extra_vars:
          db_instance_name: ${{ parameters.instanceName }}
          db_environment: ${{ parameters.environment }}
          db_size: ${{ parameters.size }}
          db_owner: ${{ parameters.owner }}

    # STEP 3: Register the new resource in the Backstage Catalog
    - id: register-catalog
      name: Register in Catalog
      action: catalog:register
      input:
        repoContentsUrl: ${{ steps.fetch-skeleton.output.repoContentsUrl }}
        catalogInfoPath: '/catalog-info.yaml'

  # === 3. OUTPUT: What to show the user upon completion ===
  output:
    links:
      - title: Go to new SQL Server Entity
        icon: database
        type: entity
        # This link will be generated by the catalog:register action
        entityRef: ${{ steps['register-catalog'].output.entityRef }}